{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":"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","sourcesContent":["//To  make sure any property i add to response or request would be recognized\ndeclare module 'express-serve-static-core' {\n\tinterface Response {\n\t\tstatusJson: (statusCode: number, data: {})=>void\n\t}\n}\n\nimport { Express } from 'express-serve-static-core';\nimport express, { Request, Response, NextFunction, ErrorRequestHandler } from 'express';\nimport createError from 'http-errors';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\nimport redis from 'redis';\nimport dotenv from 'dotenv';\nimport sassMiddleware from 'node-sass-middleware';\nimport * as http from 'http';\nimport * as socketio from 'socket.io';\nimport { RegisterInfo, RegisterMessenger, Usernames, OnlineInfo, ChainEmmiter, Typings } from './interfaces';\n\ndotenv.config();\nconst redisPort = 6379;\nexport const redisClient = redis.createClient(process.env.REDIS_URL);\n\nredisClient.on('connect', ()=>{\n  console.log('connect');\n});\nredisClient.on('ready', ()=>{\n  console.log('ready');\n});\nredisClient.on('error', (err)=>{\n  console.log(err);\n});\n\nconst app: Express = express();\n\n/**\n * Create HTTP server.\n */\nconst server: http.Server = http.createServer(app);\n\nexport const io: socketio.Server = new socketio.Server();\nio.attach(server);\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n/*app.set('etag', false);\napp.disable('etag');*/\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\n/*app.use((req: Request, res: Response, next: NextFunction)=>{\n  res.set('Cache-Control', 'no-store');\n  next();\n});*/\napp.use(sassMiddleware({\n  src: path.join(__dirname, 'public/stylesheets/sass'),\n  dest: path.join(__dirname, 'public/stylesheets'),\n  indentedSyntax: false, // true = .sass and false = .scss\n  sourceMap: true,\n  prefix: '/stylesheets'\n}));\napp.use(express.static(path.join(__dirname, 'public')));\n\n\napp.use((req: Request, res: Response, next: NextFunction)=>{\n\tres.statusJson = (statusCode: number, data: {}): void=>{\n\t\tlet obj = {\n\t\t\t...data,\n\t\t\tstatusCode: statusCode\n\t\t}\n\t\tres.status(statusCode).json(obj);\n\t\treturn;\n\t};\n\tnext();\n});\n\nimport { AppRouter } from './AppRouter';\napp.use(AppRouter.getInstance());\n\nimport './models/db';\nimport './controllers/RootController';\nimport './controllers/APIController';\nimport './controllers/AuthController';\n\n// catch 404 and forward to error handler\napp.use((req: Request, res: Response, next: NextFunction)=>{\n  next(createError(404));\n});\n\n// error handler\napp.use((err: any, req: Request, res: Response, next: NextFunction)=>{\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n//map having my sockets id maps to the names of users involved in that conversation.\nexport const sids = new Map<string, Usernames>();\nexport const onlines = new Map<string, OnlineInfo>();\n//io related issues\nio.on('connection', (socket: socketio.Socket)=>{\n  let onlineStatus: OnlineInfo;\n\tconsole.log('connection', socket.id);\n\tsocket.emit('status', { id: socket.id });\n\n  socket.on('register-id', (info: RegisterInfo)=>{\n    onlineStatus = { \n      username: info.username,\n      online: true\n    };\n    onlines.forEach((onlineInfo: OnlineInfo, id: string)=>{\n      if(onlineInfo.username === info.username){\n        onlines.delete(info.socketId);\n      }\n    });\n    onlines.set(info.socketId, onlineStatus);\n    io.emit('online', onlineStatus);\n  });\n  socket.on('register-chatroom', (info: RegisterMessenger)=>{\n    //with this operation, it deletes every other instance of conversaion between this two persons,\n    //its don so that the map doesnt get crowded if the user keeps creating different instances (tabs, devices)\n    //but of course i could try to change it and allow 2 instance only, so it doesnt get crowded.\n    sids.forEach((usernames: Usernames, id: string)=>{\n      if(usernames.receiver === info.usernames.receiver && usernames.sender === info.usernames.sender){\n        sids.delete(id);\n      }\n    });\n    sids.set(info.socketId, info.usernames);\n    socket.on('typing', (info: Typings)=>{\n      const chainIO = ({ localIO, socketsToSendTo }: ChainEmmiter ): ChainEmmiter=>{\n        //console.log('chain', sids);\n        sids.forEach((usernames: Usernames, id: string)=>{\n            if( (usernames.receiver === info.usernames.receiver && usernames.sender === info.usernames.sender) || (usernames.receiver === info.usernames.sender && usernames.sender === info.usernames.receiver) ) {\n              socketsToSendTo = true;\n              //chain rooms based on the users id\n              localIO = localIO.to(id);\n            }\n          });\n        return { localIO, socketsToSendTo };\n      }\n      const emitter = ({ localIO, socketsToSendTo }: ChainEmmiter, dataToSend: Typings | { [key: string]: string | Date | boolean | Usernames } ): void=>{\n        if(socketsToSendTo){\n          localIO.emit('io-typing', dataToSend);\n        }\n      }\n      const data: Typings = {\n        usernames: info.usernames, \n        typing: info.typing\n      };\n      emitter(\n        chainIO({ \n          localIO: io,\n          socketsToSendTo: false\n        }),\n        data\n      );\n    });\n    socket.on('chatroom-disconnect', ()=>{\n      socket.disconnect();\n    });\n  });\n\n\tsocket.on('disconnect', ()=>{\n\t\tconsole.log('Disconnect', socket.id);\n    for(let [id, onlineInfo] of onlines){\n      if(id === socket.id){\n        onlineStatus = {\n          username: onlineInfo.username,\n          online: false\n        };\n        io.emit('online', onlineStatus);\n        onlines.delete(id);\n        continue;\n      }\n    }\n    const usernames = sids.get(socket.id);\n    if(usernames){\n      sids.delete(socket.id);\n    }\n\t});\n});\n/*\n  //io\n  export const sids = new Map<string, string>();\n  io.on('connection', (socket: socketio.Socket)=>{\n    let onlineStatus: SendOnline;\n    console.log('connection', socket.id);\n    socket.emit('status', { id: socket.id });\n\n    socket.on('registerId', (info: SendInfo)=>{\n      sids.set(info.username, info.id);\n      onlineStatus = { \n        username: info.username,\n        online: true\n      };\n      console.log(sids);\n      io.emit('online', onlineStatus);\n    });\n\n    socket.on('disconnect', ()=>{\n      console.log('Disconnect', socket.id);\n      sids.forEach((value: string, key: string)=>{\n        console.log(value, key);\n        if(value === socket.id){\n          onlineStatus = {\n            username: key,\n            online: false\n          };\n          io.emit('online', onlineStatus);\n        }\n      });\n    });\n  });\n */\n\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('chatapp:server');\n\n/**\n * Get port from environment and store in Express.\n */\nvar port = normalizePort(process.env.PORT || '3000');\n\n\napp.set('port', port);\n\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val: any) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error: any) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : (addr)? 'port ' + addr.port: '';\n  debug('Listening on ' + bind);\n  console.log(\"=============\");\n  console.log(\"=============\");\n  console.log(\"App is listening from port: \" + port);\n}\n"]}